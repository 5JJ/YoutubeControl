<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http.Owin</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.OwinHttpRequestMessageExtensions">
      <summary>
        <see cref="T:System.Net.Http.HttpRequestMessage" /> 클래스에 대한 확장 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.Http.OwinHttpRequestMessageExtensions.GetOwinContext(System.Net.Http.HttpRequestMessage)">
      <summary>지정된 요청에 대한 OWIN 컨텍스트를 가져옵니다.</summary>
      <returns>사용 가능한 경우 지정된 컨텍스트에 대한 OWIN 환경이며, 그렇지 않으면 <see cref="null" />을 반환합니다.</returns>
      <param name="request">HTTP 요청 메시지입니다.</param>
    </member>
    <member name="M:System.Net.Http.OwinHttpRequestMessageExtensions.GetOwinEnvironment(System.Net.Http.HttpRequestMessage)">
      <summary>지정된 요청에 대한 OWIN 환경을 가져옵니다.</summary>
      <returns>사용 가능한 경우 지정된 요청에 대한 OWIN 환경이며, 그렇지 않으면 <see cref="null" />을 반환합니다.</returns>
      <param name="request">HTTP 요청 메시지입니다.</param>
    </member>
    <member name="M:System.Net.Http.OwinHttpRequestMessageExtensions.SetOwinContext(System.Net.Http.HttpRequestMessage,Microsoft.Owin.IOwinContext)">
      <summary>지정된 요청에 대한 OWIN 컨텍스트를 설정합니다.</summary>
      <param name="request">HTTP 요청 메시지입니다.</param>
      <param name="context">설정할 OWIN 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Net.Http.OwinHttpRequestMessageExtensions.SetOwinEnvironment(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 요청에 대한 OWIN 환경을 설정합니다.</summary>
      <param name="request">HTTP 요청 메시지입니다.</param>
      <param name="environment">설정할 OWIN 환경입니다.</param>
    </member>
    <member name="T:System.Web.Http.HostAuthenticationAttribute">
      <summary>OWIN 미들웨어를 통해 인증하는 인증 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Http.HostAuthenticationAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Http.HostAuthenticationAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="authenticationType">사용할 OWIN 미들웨어의 인증 유형입니다.</param>
    </member>
    <member name="P:System.Web.Http.HostAuthenticationAttribute.AllowMultiple"></member>
    <member name="M:System.Web.Http.HostAuthenticationAttribute.AuthenticateAsync(System.Web.Http.Filters.HttpAuthenticationContext,System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.HostAuthenticationAttribute.AuthenticationType">
      <summary>사용할 OWIN 미들웨어의 인증 유형을 가져옵니다.</summary>
    </member>
    <member name="M:System.Web.Http.HostAuthenticationAttribute.ChallengeAsync(System.Web.Http.Filters.HttpAuthenticationChallengeContext,System.Threading.CancellationToken)"></member>
    <member name="T:System.Web.Http.HostAuthenticationFilter">
      <summary>OWIN 미들웨어를 통해 인증하는 인증 필터를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Http.HostAuthenticationFilter.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Http.HostAuthenticationFilter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="authenticationType">사용할 OWIN 미들웨어의 인증 유형입니다.</param>
    </member>
    <member name="P:System.Web.Http.HostAuthenticationFilter.AllowMultiple">
      <summary>필터에서 여러 인증을 허용하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>필터에서 여러 인증을 허용하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Web.Http.HostAuthenticationFilter.AuthenticateAsync(System.Web.Http.Filters.HttpAuthenticationContext,System.Threading.CancellationToken)">
      <summary>요청을 비동기적으로 인증합니다.</summary>
      <returns>인증을 완료하는 작업입니다.</returns>
      <param name="context">인증 컨텍스트입니다.</param>
      <param name="cancellationToken">취소 토큰입니다.</param>
    </member>
    <member name="P:System.Web.Http.HostAuthenticationFilter.AuthenticationType">
      <summary>사용할 OWIN 미들웨어의 인증 유형을 가져옵니다.</summary>
      <returns>사용할 OWIN 미들웨어의 인증 유형입니다.</returns>
    </member>
    <member name="M:System.Web.Http.HostAuthenticationFilter.ChallengeAsync(System.Web.Http.Filters.HttpAuthenticationChallengeContext,System.Threading.CancellationToken)">
      <summary>인증을 비동기적으로 챌린징합니다.</summary>
      <returns>챌린지를 완료하는 작업입니다.</returns>
      <param name="context">컨텍스트입니다.</param>
      <param name="cancellationToken">취소 토큰입니다.</param>
    </member>
    <member name="T:System.Web.Http.OwinHttpConfigurationExtensions">
      <summary>
        <see cref="T:System.Web.Http.HttpConfiguration" /> 클래스에 대한 확장 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Http.OwinHttpConfigurationExtensions.SuppressDefaultHostAuthentication(System.Web.Http.HttpConfiguration)">
      <summary>호스트의 기본 인증이 표시되지 않도록 합니다.</summary>
      <param name="configuration">서버 구성입니다.</param>
    </member>
    <member name="T:System.Web.Http.Owin.HttpMessageHandlerAdapter">
      <summary>호출된 <see cref="T:System.Net.Http.HttpMessageHandler" />에 요청을 제출하는 OWIN 구성 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Http.Owin.HttpMessageHandlerAdapter.#ctor(Microsoft.Owin.OwinMiddleware,System.Net.Http.HttpMessageHandler,System.Web.Http.Hosting.IHostBufferPolicySelector)">
      <summary>
        <see cref="T:System.Web.Http.Owin.HttpMessageHandlerAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="next">파이프라인의 다음 구성 요소입니다.</param>
      <param name="messageHandler">요청을 제출할 <see cref="T:System.Net.Http.HttpMessageHandler" />입니다.</param>
      <param name="bufferPolicySelector">요청 및 응답을 버퍼링하는지 여부를 확인하는 <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />입니다.</param>
    </member>
    <member name="M:System.Web.Http.Owin.HttpMessageHandlerAdapter.#ctor(Microsoft.Owin.OwinMiddleware,System.Web.Http.Owin.HttpMessageHandlerOptions)">
      <summary>
        <see cref="T:System.Web.Http.Owin.HttpMessageHandlerAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="next">파이프라인의 다음 구성 요소입니다.</param>
      <param name="options">이 어댑터를 구성하는 옵션입니다.</param>
    </member>
    <member name="P:System.Web.Http.Owin.HttpMessageHandlerAdapter.AppDisposing">
      <summary>이 구성 요소의 정리를 트리거하는 취소 토큰을 가져옵니다.</summary>
      <returns>취소 토큰입니다.</returns>
    </member>
    <member name="P:System.Web.Http.Owin.HttpMessageHandlerAdapter.BufferPolicySelector">
      <summary>요청 및 응답을 버퍼링하는지 여부를 확인하는 <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />를 가져옵니다.</summary>
      <returns>요청 및 응답을 버퍼링하는지 여부를 확인하는 <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />입니다.</returns>
    </member>
    <member name="M:System.Web.Http.Owin.HttpMessageHandlerAdapter.Dispose">
      <summary>
        <see cref="T:System.Web.Http.Owin.HttpMessageHandlerAdapter" /> 클래스의 현재 인스턴스에서 사용된 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Web.Http.Owin.HttpMessageHandlerAdapter.Dispose(System.Boolean)">
      <summary>관리되지 않는 리소스를 해제하고, 필요한 경우 관리되는 리소스도 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 true이고, 관리되지 않는 리소스만 해제하려면 false입니다.</param>
    </member>
    <member name="P:System.Web.Http.Owin.HttpMessageHandlerAdapter.ExceptionHandler">
      <summary>처리되지 않은 예외를 처리하는 데 사용할 <see cref="T:System.Web.Http.ExceptionHandling.IExceptionHandler" />를 가져옵니다.</summary>
      <returns>처리되지 않은 예외를 처리하는 데 사용할 <see cref="T:System.Web.Http.ExceptionHandling.IExceptionHandler" />입니다.</returns>
    </member>
    <member name="P:System.Web.Http.Owin.HttpMessageHandlerAdapter.ExceptionLogger">
      <summary>처리되지 않은 예외를 기록하는 데 사용할 <see cref="T:System.Web.Http.ExceptionHandling.IExceptionLogger" />를 가져옵니다.</summary>
      <returns>처리되지 않은 예외를 기록하는 데 사용할 <see cref="T:System.Web.Http.ExceptionHandling.IExceptionLogger" />입니다.</returns>
    </member>
    <member name="M:System.Web.Http.Owin.HttpMessageHandlerAdapter.Invoke(Microsoft.Owin.IOwinContext)">
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />을 반환합니다.</returns>
    </member>
    <member name="P:System.Web.Http.Owin.HttpMessageHandlerAdapter.MessageHandler">
      <summary>요청을 제출할 <see cref="T:System.Net.Http.HttpMessageHandler" />를 가져옵니다.</summary>
      <returns>요청을 제출할 <see cref="T:System.Net.Http.HttpMessageHandler" />입니다.</returns>
    </member>
    <member name="T:System.Web.Http.Owin.HttpMessageHandlerOptions">
      <summary>
        <see cref="T:System.Web.Http.Owin.HttpMessageHandlerAdapter" /> 구성 옵션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Http.Owin.HttpMessageHandlerOptions.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Owin.HttpMessageHandlerOptions" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Http.Owin.HttpMessageHandlerOptions.AppDisposing">
      <summary>
        <see cref="T:System.Web.Http.Owin.HttpMessageHandlerAdapter" />의 정리를 트리거하는 <see cref="T:System.Threading.CancellationToken" />을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Web.Http.Owin.HttpMessageHandlerAdapter" />의 정리를 트리거하는 <see cref="T:System.Threading.CancellationToken" />입니다.</returns>
    </member>
    <member name="P:System.Web.Http.Owin.HttpMessageHandlerOptions.BufferPolicySelector">
      <summary>요청 및 응답을 버퍼링하는지 여부를 확인하는 <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />를 가져오거나 설정합니다.</summary>
      <returns>요청 및 응답을 버퍼링하는지 여부를 확인하는 <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />입니다.</returns>
    </member>
    <member name="P:System.Web.Http.Owin.HttpMessageHandlerOptions.ExceptionHandler">
      <summary>처리되지 않은 예외를 처리하는 데 사용할 <see cref="T:System.Web.Http.ExceptionHandling.IExceptionHandler" />를 가져오거나 설정합니다.</summary>
      <returns>처리되지 않은 예외를 처리하는 데 사용할 <see cref="T:System.Web.Http.ExceptionHandling.IExceptionHandler" />입니다.</returns>
    </member>
    <member name="P:System.Web.Http.Owin.HttpMessageHandlerOptions.ExceptionLogger">
      <summary>처리되지 않은 예외를 기록하는 데 사용할 <see cref="T:System.Web.Http.ExceptionHandling.IExceptionLogger" />를 가져오거나 설정합니다.</summary>
      <returns>처리되지 않은 예외를 기록하는 데 사용할 <see cref="T:System.Web.Http.ExceptionHandling.IExceptionLogger" />입니다.</returns>
    </member>
    <member name="P:System.Web.Http.Owin.HttpMessageHandlerOptions.MessageHandler">
      <summary>요청을 제출할 <see cref="T:System.Net.Http.HttpMessageHandler" />를 가져오거나 설정합니다.</summary>
      <returns>요청을 제출할 <see cref="T:System.Net.Http.HttpMessageHandler" />입니다.</returns>
    </member>
    <member name="T:System.Web.Http.Owin.OwinBufferPolicySelector">
      <summary>OWIN Web API 어댑터에서 사용되는 <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />의 기본 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Http.Owin.OwinBufferPolicySelector.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Owin.OwinBufferPolicySelector" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Http.Owin.OwinBufferPolicySelector.UseBufferedInputStream(System.Object)">
      <summary>호스트에서 HttpRequestMessage 엔터티 본문을 버퍼링해야 하는지 여부를 확인합니다.</summary>
      <returns>버퍼링을 사용해야 하면 true이고, 그렇지 않으면 스트리밍된 요청을 사용해야 합니다.</returns>
      <param name="hostContext">호스트 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Http.Owin.OwinBufferPolicySelector.UseBufferedOutputStream(System.Net.Http.HttpResponseMessage)">
      <summary>호스트에서 HttpResponseMessage 엔터티 본문을 버퍼링해야 하는지 여부를 확인합니다.</summary>
      <returns>버퍼링을 사용해야 하면 true이고, 그렇지 않으면 스트리밍된 응답을 사용해야 합니다.</returns>
      <param name="response">응답입니다.</param>
    </member>
    <member name="T:System.Web.Http.Owin.OwinExceptionCatchBlocks">
      <summary>이 어셈블리에서 사용되는 catch 블록을 제공합니다.</summary>
    </member>
    <member name="P:System.Web.Http.Owin.OwinExceptionCatchBlocks.HttpMessageHandlerAdapterBufferContent">
      <summary>System.Web.Http.Owin.HttpMessageHandlerAdapter.BufferContent의 catch 블록을 가져옵니다.</summary>
      <returns>System.Web.Http.Owin.HttpMessageHandlerAdapter.BufferContent의 catch 블록입니다.</returns>
    </member>
    <member name="P:System.Web.Http.Owin.OwinExceptionCatchBlocks.HttpMessageHandlerAdapterBufferError">
      <summary>System.Web.Http.Owin.HttpMessageHandlerAdapter.BufferError의 catch 블록을 가져옵니다.</summary>
      <returns>System.Web.Http.Owin.HttpMessageHandlerAdapter.BufferError의 catch 블록입니다.</returns>
    </member>
    <member name="P:System.Web.Http.Owin.OwinExceptionCatchBlocks.HttpMessageHandlerAdapterComputeContentLength">
      <summary>System.Web.Http.Owin.HttpMessageHandlerAdapter.ComputeContentLength의 catch 블록을 가져옵니다.</summary>
      <returns>System.Web.Http.Owin.HttpMessageHandlerAdapter.ComputeContentLength의 catch 블록입니다.</returns>
    </member>
    <member name="P:System.Web.Http.Owin.OwinExceptionCatchBlocks.HttpMessageHandlerAdapterStreamContent">
      <summary>System.Web.Http.Owin.HttpMessageHandlerAdapter.StreamContent의 catch 블록을 가져옵니다.</summary>
      <returns>System.Web.Http.Owin.HttpMessageHandlerAdapter.StreamContent의 catch 블록입니다.</returns>
    </member>
    <member name="T:System.Web.Http.Owin.PassiveAuthenticationMessageHandler">
      <summary>모든 OWIN 인증 미들웨어를 수동으로 처리하는 메시지 처리기를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Http.Owin.PassiveAuthenticationMessageHandler.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Owin.PassiveAuthenticationMessageHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Http.Owin.PassiveAuthenticationMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>메시지 요청을 비동기적으로 보냅니다.</summary>
      <returns>비동기 작업을 완료하는 작업입니다.</returns>
      <param name="request">메시지 요청입니다.</param>
      <param name="cancellationToken">취소 토큰입니다.</param>
    </member>
  </members>
</doc>